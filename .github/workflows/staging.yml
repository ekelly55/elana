name: Log changes to staging

on:
  push:
    branches: [ staging ]
    paths:
      - elana-site/**
  workflow_dispatch:

jobs:
  create-src-log:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: staging
        fetch-depth: 0

    - name: Get previous commit
      id: get-prev-commit
      run: |
          echo "prev_commit=$(git rev-parse staging~1)" >> $GITHUB_OUTPUT   
    
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ steps.get-prev-commit.outputs.prev_commit }}
        ref: ${{ github.sha }}
        filters: |
          src:
            - 'elana-site/src/**'

    - name: Debug
      run: |
        echo "src changes: ${{ steps.filter.outputs.src }}"
        git log -2 --oneline

    - name: update src
      if: steps.filter.outputs.src == 'true'
      run: |
        echo "New content added to /src $(date)" >> ./elana-site/src/log.txt
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add ./elana-site/src/log.txt
        git commit -m "Add log to src"
        git push


  create-public-log:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: staging
        fetch-depth: 0
    
    - name: Get previous commit
      id: get-prev-commit
      run: |
          echo "prev_commit=$(git rev-parse staging~1)" >> $GITHUB_OUTPUT

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ steps.get-prev-commit.outputs.prev_commit }}
        ref: ${{ github.sha }}
        filters: |
          public:
            - 'elana-site/public/**'

    - name: Debug
      run: |
        echo "public changes: ${{ steps.filter.outputs.public }}"
        git log -2 --oneline

    - name: update public
      if: steps.filter.outputs.public == 'true'
      run: |
        echo "New content added to /public $(date)" >> ./elana-site/public/log.txt
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add ./elana-site/public
        git commit -m "Add log to public"
        git push

  
  
  create-lib-log:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: staging
        fetch-depth: 0
    
    - name: Get previous commit
      id: get-prev-commit
      run: |
          echo "prev_commit=$(git rev-parse staging~1)" >> $GITHUB_OUTPUT   

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ steps.get-prev-commit.outputs.prev_commit }}
        ref: ${{ github.sha }}
        filters: |
          lib:
            - 'elana-site/lib/**'

    - name: Debug
      run: |
        echo "lib changes: ${{ steps.filter.outputs.lib }}"
        git log -2 --oneline

    - name: update lib
      if: steps.filter.outputs.lib == 'true'
      run: |
        echo "New content added to /lib $(date)" >> ./elana-site/lib/log.txt
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add ./elana-site/lib
        git commit -m "Add log to lib"
        git push

  create-foo-log:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: staging
        fetch-depth: 0
    
    - name: Get previous commit
      id: get-prev-commit
      run: |
          echo "prev_commit=$(git rev-parse staging~1)" >> $GITHUB_OUTPUT   

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ steps.get-prev-commit.outputs.prev_commit }}
        ref: ${{ github.sha }}
        filters: |
          foo:
            - 'elana-site/foo/**'

    - name: Debug
      run: |
        echo "foo changes: ${{ steps.filter.outputs.foo }}"
        git log -2 --oneline

    - name: update foo
      if: steps.filter.outputs.foo == 'true'
      run: |
        echo "New content added to /foo $(date)" >> ./elana-site/foo/log.txt
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add ./elana-site/foo
        git commit -m "Add log to foo"
        git push

  create-emk-log:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: staging
        fetch-depth: 0
    
    - name: Get previous commit
      id: get-prev-commit
      run: |
          echo "prev_commit=$(git rev-parse staging~1)" >> $GITHUB_OUTPUT   

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ steps.get-prev-commit.outputs.prev_commit }}
        ref: ${{ github.sha }}
        filters: |
          emk:
            - 'elana-site/emk/**'

    - name: Debug
      run: |
        echo "emk changes: ${{ steps.filter.outputs.emk }}"
        git log -2 --oneline

    - name: update emk
      if: steps.filter.outputs.emk == 'true'
      run: |
        echo "New content added to /emk $(date)" >> ./elana-site/emk/log.txt
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add ./elana-site/emk
        git commit -m "Add log to emk"
        git push

  create-milo-log:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: staging
        fetch-depth: 0
    
    - name: Get previous commit
      id: get-prev-commit
      run: |
          echo "prev_commit=$(git rev-parse staging~1)" >> $GITHUB_OUTPUT   

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ steps.get-prev-commit.outputs.prev_commit }}
        ref: ${{ github.sha }}
        filters: |
          milo:
            - 'elana-site/milo/**'

    - name: Debug
      run: |
        echo "milo changes: ${{ steps.filter.outputs.milo }}"
        git log -2 --oneline

    - name: update milo
      if: steps.filter.outputs.milo == 'true'
      run: |
        echo "New content added to /milo $(date)" >> ./elana-site/milo/log.txt
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add ./elana-site/milo
        git commit -m "Add log to milo"
        git push
