name: Log changes and Id Deployment Env

on:
  push:
    branches: [ main, staging ]
    paths:
      - elana-site/**
  workflow_dispatch:

jobs:
  set-environment:
    runs-on: ubuntu-latest
    # Only run if the PR was merged
    permissions:
      contents: read
    
    outputs:
      aws_account: ${{ steps.set-env.outputs.aws_account }}
      target_branch: ${{ steps.set-env.outputs.target_branch }}

    steps:
      - name: Set Environment Variables
        id: set-env
        run: |
          TARGET_BRANCH=${{ github.base_ref }}
          echo "target_branch=${TARGET_BRANCH}" >> $GITHUB_OUTPUT
          
          if [[ "${TARGET_BRANCH}" == "main" ]]; then
            echo "aws_account=prod" >> $GITHUB_OUTPUT
          elif [[ "${TARGET_BRANCH}" == "staging" ]]; then
            echo "aws_account=staging" >> $GITHUB_OUTPUT
          else 
            echo "Unknown branch name: ${TARGET_BRANCH}"
            exit 1
          fi
        shell: bash

  id-src-changes:
    needs: set-environment
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.set-environment.outputs.target_branch }}
          fetch-depth: 2

      - name: Get previous commit
        id: get-prev-commit
        run: |
          echo "prev_commit=$(git rev-parse HEAD~1)" >> $GITHUB_OUTPUT
    
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ steps.get-prev-commit.outputs.prev_commit }}
          ref: ${{ github.sha }}
          filters: |
            src:
              - 'elana-site/src/**'

      - name: Debug
        run: |
          echo "src changes: ${{ steps.filter.outputs.src }}"
          echo "Target branch: ${{ needs.set-environment.outputs.target_branch }}"
          echo "AWS Account: ${{ needs.set-environment.outputs.aws_account }}"
          git log -2 --oneline

      - name: Print deployment account
        if: steps.filter.outputs.src == 'true'
        run: |
          echo "Change to src on branch ${{ needs.set-environment.outputs.target_branch }} to deploy to ${{ needs.set-environment.outputs.aws_account }}"

  id-public-changes:
    needs: set-environment
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.set-environment.outputs.target_branch }}
          fetch-depth: 2

      - name: Get previous commit
        id: get-prev-commit
        run: |
          echo "prev_commit=$(git rev-parse HEAD~1)" >> $GITHUB_OUTPUT
    
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ steps.get-prev-commit.outputs.prev_commit }}
          ref: ${{ github.sha }}
          filters: |
            public:
              - 'elana-site/public/**'

      - name: Debug
        run: |
          echo "public changes: ${{ steps.filter.outputs.public }}"
          echo "Target branch: ${{ needs.set-environment.outputs.target_branch }}"
          echo "AWS Account: ${{ needs.set-environment.outputs.aws_account }}"
          git log -2 --oneline

      - name: Print deployment account
        if: steps.filter.outputs.public == 'true'
        run: |
          echo "Change to public on branch ${{ needs.set-environment.outputs.target_branch }} to deploy to ${{ needs.set-environment.outputs.aws_account }}"
  
  id-emk-changes:
    needs: set-environment
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.set-environment.outputs.target_branch }}
          fetch-depth: 2

      - name: Get previous commit
        id: get-prev-commit
        run: |
          echo "prev_commit=$(git rev-parse HEAD~1)" >> $GITHUB_OUTPUT
    
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ steps.get-prev-commit.outputs.prev_commit }}
          ref: ${{ github.sha }}
          filters: |
            emk:
              - 'elana-site/emk/**'

      - name: Debug
        run: |
          echo "emk changes: ${{ steps.filter.outputs.emk }}"
          echo "Target branch: ${{ needs.set-environment.outputs.target_branch }}"
          echo "AWS Account: ${{ needs.set-environment.outputs.aws_account }}"
          git log -2 --oneline

      - name: Print deployment account
        if: steps.filter.outputs.emk == 'true'
        run: |
          echo "Change to emk on branch ${{ needs.set-environment.outputs.target_branch }} to deploy to ${{ needs.set-environment.outputs.aws_account }}"
